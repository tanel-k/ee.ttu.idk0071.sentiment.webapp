{"version":3,"sources":["app.js","environment.js","lookup-form.js","lookup-result.js","main.js","messages.js","no-lookup.js","utils.js","web-api.js","resources/index.js","resources/elements/loading-indicator.js"],"names":["App","inject","api","configureRouter","config","router","title","map","route","moduleId","name","debug","testing","LookupForm","ea","created","getBusinessTypes","then","bussinessTypes","types","x","value","id","getCountries","countries","code","performLookup","publish","countryCode","countryId","businessTypeId","typeId","businessName","navigate","lookupResult","isRequesting","LookupResult","subscribe","activate","params","getLookupData","lookupId","lookupData","getLookupSnapshots","snapshots","snapshotsResult","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","setRoot","LookupStarted","NoLookup","message","isEmpty","val","trim","WebAPI","httpClient","fetch","response","json","business","method","body","JSON","stringify","headers","globalResources","nprogress","LoadingIndicator","defaultValue","on","loadingChanged","newValue","done"],"mappings":";;;;;;;;;;;;;;MAEaA,cAAAA;QACJC,2BAAS;AAAE,aAAO,gBAAP;AAAkB;;AAEpC,iBAAYC,GAAZ,EAAiB;AAAA;;AACf,WAAKA,GAAL,GAAWA,GAAX;AACD;;kBAEDC,2CAAgBC,QAAQC,QAAQ;AAC9BD,aAAOE,KAAP,GAAe,gBAAf;AACAF,aAAOG,GAAP,CAAW,CACT,EAAEC,OAAO,EAAT,EAAaC,UAAU,WAAvB,EAAoCH,OAAO,SAA3C,EADS,EAET,EAAEE,OAAO,mBAAT,EAA8BC,UAAU,eAAxC,EAAyDC,MAAM,SAA/D,EAFS,CAAX;;AAKA,WAAKL,MAAL,GAAcA,MAAd;AACD;;;;;;;;;;;oBCjBY;AACbM,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KCSFC,qBAAAA;aACLZ,2BAAS;AAAE,UAAO,gFAAP;AAA0C;;AAE5D,sBAAYC,GAAZ,EAAiBG,MAAjB,EAAyBS,EAAzB,EAA6B;AAAA;;AAC5B,QAAKZ,GAAL,GAAWA,GAAX;AACA,QAAKG,MAAL,GAAcA,MAAd;AACA,QAAKS,EAAL,GAAUA,EAAV;AACA;;uBAEDC,6BAAU;AAAA;;AACT,QAAKb,GAAL,CAASc,gBAAT,GAA4BC,IAA5B,CAAiC,iBAAS;AACxC,UAAKC,cAAL,GAAsBC,MAAMZ,GAAN,CAAU,aAAK;AACpC,YAAO,EAAEG,MAAMU,EAAEV,IAAV,EAAgBW,OAAOD,EAAEE,EAAzB,EAAP;AACA,KAFqB,CAAtB;AAGA,IAJF;;AAMA,QAAKpB,GAAL,CAASqB,YAAT,GAAwBN,IAAxB,CAA6B,qBAAa;AACxC,UAAKO,SAAL,GAAiBA,UAAUjB,GAAV,CAAc,aAAK;AACnC,YAAO,EAAEG,MAAMU,EAAEV,IAAV,EAAgBW,OAAOD,EAAEK,IAAzB,EAAP;AACD,KAFiB,CAAjB;AAGD,IAJD;AAKA;;uBASAC,yCAAgB;AAAA;;AACd,QAAKZ,EAAL,CAAQa,OAAR,CAAgB,6BAAhB;;AAEA,QAAKzB,GAAL,CAASwB,aAAT,CAAuB;AACrBE,iBAAa,KAAKC,SADG;AAErBC,oBAAgB,KAAKC,MAFA;AAGrBC,kBAAc,KAAKA;AAHE,IAAvB,EAIGf,IAJH,CAIQ,wBAAgB;AACtB,WAAKZ,MAAL,CAAY4B,QAAZ,CAAqB,aAAaC,aAAaZ,EAA/C;AACD,IAND;AAOF;;;;uBAjBe;AACf,WAAO,KAAKS,MAAL,IACH,KAAKF,SADF,IAEH,CAAC,oBAAQ,KAAKG,YAAb,CAFE,IAGH,CAAC,KAAK9B,GAAL,CAASiC,YAAT,EAHL;AAIA;;;;;;;;;;;;;;;;;;;;MC9BWC,uBAAAA;iBACJnC,2BAAS;AAAE,aAAO,yDAAP;AAAmC;;AAErD,0BAAYC,GAAZ,EAAiBY,EAAjB,EAAoB;AAAA;;AAClB,WAAKZ,GAAL,GAAWA,GAAX;AACA,WAAKY,EAAL,GAAUA,EAAV;AACA,WAAKA,EAAL,CAAQuB,SAAR,0BAAiC,eAAQ,CAExC,CAFD;AAGD;;2BAEDC,6BAASC,QAAQ;AAAA;;AACf,WAAKrC,GAAL,CAASsC,aAAT,CAAuBD,OAAOE,QAA9B,EAAwCxB,IAAxC,CAA6C,sBAAc;AACzD,cAAKyB,UAAL,GAAkBA,UAAlB;AACD,OAFD;;AAIA,aAAO,KAAKxC,GAAL,CAASyC,kBAAT,CAA4BJ,OAAOE,QAAnC,EAA6CxB,IAA7C,CAAkD,2BAAmB;AAC1E,cAAK2B,SAAL,GAAiBC,eAAjB;AACD,OAFM,CAAP;AAGD;;;;;;;;;;;UCjBaC,YAAAA;;;;;;;;;;AANhBC,UAAQ3C,MAAR,CAAe;AACb4C,cAAU;AACRC,wBAAkB;AADV;AADG,GAAf;;AAMO,WAASH,SAAT,CAAmBI,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAY1C,KAAhB,EAAuB;AACrBuC,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAY1C,OAAhB,EAAyB;AACvBsC,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBvC,IAAhB,CAAqB;AAAA,aAAMiC,QAAQO,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;;;;;;;;MCpBYC,wBAAAA,gBACX,yBAAa;AAAA;AAEZ;;;;;;;;;;;;;;;MCHUC,mBAAAA,WACX,oBAAc;AAAA;;AACZ,SAAKC,OAAL,GAAe,8CAAf;AACD;;;;;;;;UCHaC,UAAAA;AAAT,WAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAC3B,WAAO,CAACA,GAAD,IAAQ,CAACA,IAAIC,IAAJ,EAAhB;AACD;;;;;;;;;;;;;;;;MCAYC,iBAAAA;;;;WACXC,aAAa;;;qBAEb9B,uCAAe;AACb,aAAO,KAAK8B,UAAL,CAAgB9B,YAAvB;AACD;;qBAEFZ,uCAAe;AACZ,aAAO,KAAK0C,UAAL,CACJC,KADI,CACE,6CADF,EAEJjD,IAFI,CAEC,oBAAY;AAAE,eAAOkD,SAASC,IAAT,EAAP;AAAwB,OAFvC,CAAP;AAGF;;qBAEDpD,+CAAmB;AAChB,aAAO,KAAKiD,UAAL,CACJC,KADI,CACE,kDADF,EAEJjD,IAFI,CAEC,oBAAY;AAAE,eAAOkD,SAASC,IAAT,EAAP;AAAwB,OAFvC,CAAP;AAGF;;qBAEDzB,iDAAmBF,UAAU;AAC1B,aAAO,KAAKwB,UAAL,CACJC,KADI,CACE,mCAAmCzB,QAAnC,GAA8C,YADhD,EAEJxB,IAFI,CAEC,oBAAY;AAAE,eAAOkD,SAASC,IAAT,EAAP;AAAwB,OAFvC,CAAP;AAGD;;qBAED5B,uCAAcC,UAAU;AACtB,aAAO,KAAKwB,UAAL,CACJC,KADI,CACE,mCAAmCzB,QADrC,EAEJxB,IAFI,CAEC,oBAAY;AAAE,eAAOkD,SAASC,IAAT,EAAP;AAAwB,OAFvC,CAAP;AAGD;;qBAED1C,uCAAc2C,UAAU;AACtB,aAAO,KAAKJ,UAAL,CACJC,KADI,CACE,+BADF,EACmC;AACtCI,gBAAQ,MAD8B;AAEtCC,cAAMC,KAAKC,SAAL,CAAeJ,QAAf,CAFgC;AAGtCK,iBAAS;AACP,0BAAgB;AADT;AAH6B,OADnC,EAOFzD,IAPE,CAOG,oBAAY;AAAE,eAAOkD,SAASC,IAAT,EAAP;AAAwB,OAPzC,CAAP;AAQD;;;;;;;;;;;SC7CatB,YAAAA;AAAT,UAASA,SAAT,CAAmB1C,MAAnB,EAA2B;AACjCA,SAAOuE,eAAP,CAAuB,CAAC,8BAAD,CAAvB;AACA;;;;;;;;;;KCCWC;;;;;;;;;;;;;;;;;;;;;;;;;AAGL,KAAIC,8CAAmB,kCAC7B,8BAAO,CAAC,yBAAD,CAAP,CAD6B,EAE7B,gCAAS,EAACnE,MAAM,SAAP,EAAkBoE,cAAc,KAAhC,EAAT,CAF6B,EAG5BC,EAH4B;AAAA;AAAA;AAAA;;AAAA,mBAI7BC,cAJ6B,2BAIdC,QAJc,EAIL;AACvB,OAAIA,QAAJ,EAAc;AACbL,cAAUpB,KAAV;AACA,IAFD,MAEO;AACNoB,cAAUM,IAAV;AACA;AACD,GAV4B;;AAAA;AAAA,KAAvB","file":"app-bundle.js","sourcesContent":["import {WebAPI} from './web-api';\r\n\r\nexport class App {\r\n  static inject() { return [WebAPI]; }\r\n\r\n  constructor(api) {\r\n    this.api = api;\r\n  }\r\n\r\n  configureRouter(config, router) {\r\n    config.title = 'Sentimental.ly';\r\n    config.map([\r\n      { route: '', moduleId: 'no-lookup', title: 'Lookups'},\r\n      { route: 'lookups/:lookupId', moduleId: 'lookup-result', name: 'lookups' }\r\n    ]);\r\n\r\n    this.router = router;\r\n  }\r\n}\r\n","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","/**\n * Created by Tanel.Prikk on 2/21/2017.\n */\nimport {WebAPI} from './web-api';\nimport {isEmpty} from './utils';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {LookupStarted} from './messages';\n\nexport class LookupForm {\n\tstatic inject() { return [WebAPI, Router, EventAggregator] };\n\n\tconstructor(api, router, ea) {\n\t\tthis.api = api;\n\t\tthis.router = router;\n\t\tthis.ea = ea;\n\t}\n\n\tcreated() {\n\t\tthis.api.getBusinessTypes().then(types => {\n\t\t\t\tthis.bussinessTypes = types.map(x => {\n\t\t\t\t\treturn { name: x.name, value: x.id };\n\t\t\t\t});\n\t\t\t});\n\n\t\tthis.api.getCountries().then(countries => {\n\t\t\t\tthis.countries = countries.map(x => {\n\t\t\t\t\treturn { name: x.name, value: x.code }\n\t\t\t});\n\t\t});\n\t}\n\n\tget canLookup() {\n\t\treturn this.typeId\n\t\t\t&& this.countryId\n\t\t\t&& !isEmpty(this.businessName)\n\t\t\t&& !this.api.isRequesting();\n\t}\n\n  performLookup() {\n    this.ea.publish(new LookupStarted());\n\n    this.api.performLookup({\n      countryCode: this.countryId,\n      businessTypeId: this.typeId,\n      businessName: this.businessName\n    }).then(lookupResult => {\n      this.router.navigate(\"lookups/\" + lookupResult.id);\n    });\n\t}\n}\n","/**\n * Created by Tanel.Prikk on 2/21/2017.\n */\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {LookupStarted} from './messages';\nimport {WebAPI} from './web-api';\n\nexport class LookupResult {\n  static inject() { return [WebAPI, EventAggregator]; }\n\n  constructor(api, ea){\n    this.api = api;\n    this.ea = ea;\n    this.ea.subscribe(LookupStarted, msg =>  {\n      // clear old results here\n    });\n  }\n\n  activate(params) {\n    this.api.getLookupData(params.lookupId).then(lookupData => {\n      this.lookupData = lookupData;\n    });\n\n    return this.api.getLookupSnapshots(params.lookupId).then(snapshotsResult => {\n      this.snapshots = snapshotsResult;\n    });\n  }\n}\n","import environment from './environment';\r\n\r\n//Configure Bluebird Promises.\r\nPromise.config({\r\n  warnings: {\r\n    wForgottenReturn: false\r\n  }\r\n});\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","/**\r\n * Created by Tanel.Prikk on 2/21/2017.\r\n */\r\nexport class LookupStarted {\r\n  constructor(){\r\n   // pass\r\n  }\r\n}\r\n","/**\r\n * Created by Tanel.Prikk on 2/21/2017.\r\n */\r\nexport class NoLookup {\r\n  constructor() {\r\n    this.message = \"Use the form to see what other people think.\";\r\n  }\r\n}\r\n","/**\r\n * Created by Tanel.Prikk on 2/21/2017.\r\n */\r\nexport function isEmpty(val) {\r\n  return !val || !val.trim();\r\n}\r\n","/**\n * Created by Tanel.Prikk on 2/21/2017.\n */\nimport {HttpClient, json} from 'aurelia-fetch-client';\n\nexport class WebAPI {\n  httpClient = new HttpClient();\n\n  isRequesting() {\n    return this.httpClient.isRequesting;\n  }\n\n\tgetCountries() {\n    return this.httpClient\n      .fetch('http://localhost:8080/classifiers/countries')\n      .then(response => { return response.json() });\n\t}\n\n\tgetBusinessTypes() {\n    return this.httpClient\n      .fetch('http://localhost:8080/classifiers/business-types')\n      .then(response => { return response.json() });\n\t}\n\n\tgetLookupSnapshots(lookupId) {\n    return this.httpClient\n      .fetch('http://localhost:8080/lookups/' + lookupId + '/snapshots')\n      .then(response => { return response.json() });\n  }\n\n  getLookupData(lookupId) {\n    return this.httpClient\n      .fetch('http://localhost:8080/lookups/' + lookupId)\n      .then(response => { return response.json() });\n  }\n\n  performLookup(business) {\n    return this.httpClient\n      .fetch('http://localhost:8080/lookups', {\n        method: 'POST',\n        body: JSON.stringify(business),\n        headers: {\n          'Content-type': 'application/json'\n        }\n      }).then(response => { return response.json() });\n  }\n}\n","export function configure(config) {\r\n\tconfig.globalResources(['./elements/loading-indicator']);\r\n}\r\n","/**\r\n * Created by Tanel.Prikk on 2/21/2017.\r\n */\r\nimport * as nprogress from 'nprogress';\r\nimport {bindable, noView, decorators} from 'aurelia-framework';\r\n\r\nexport let LoadingIndicator = decorators(\r\n\tnoView(['nprogress/nprogress.css']),\r\n\tbindable({name: 'loading', defaultValue: false})\r\n).on(class {\r\n\tloadingChanged(newValue){\r\n\t\tif (newValue) {\r\n\t\t\tnprogress.start();\r\n\t\t} else {\r\n\t\t\tnprogress.done();\r\n\t\t}\r\n\t}\r\n});\r\n"],"sourceRoot":"../src"}