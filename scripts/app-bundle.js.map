{"version":3,"sources":["app.js","environment.js","main.js","lib/utils.js","resources/index.js","containers/lookup-detail/lookup-detail.js","containers/lookup-form/lookup-form.js","gateways/data/data-api.js"],"names":["App","configureRouter","config","router","title","map","route","name","moduleId","debug","testing","gatewayURL","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","isEmpty","val","trim","globalResources","LookupResult","api","activate","params","getLookupData","lookupId","lookupData","JSON","stringify","LookupForm","entityName","performLookup","blockPage","domainIds","releasePage","navigate","lookupResult","id","$","blockUI","message","unblockUI","DataAPI","httpClient","useStandardConfiguration","withBaseUrl","isRequesting","fetch","response","json","method","body","headers"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\r\n  configureRouter(config, router) {\r\n    config.title = 'Sentimental.ly';\r\n    config.map([\r\n      {\r\n        route: '',\r\n        name: 'lookup-form',\r\n        moduleId: 'containers/lookup-form/lookup-form'\r\n      },\r\n      {\r\n        route: 'lookups/:lookupId',\r\n        name: 'lookup-detail',\r\n        moduleId: 'containers/lookup-detail/lookup-detail'\r\n      }\r\n    ]);\r\n\r\n    this.router = router;\r\n  }\r\n}\r\n","export default {\r\n\tdebug: true,\r\n\ttesting: true,\r\n\tgatewayURL: 'http://localhost:8080/'\r\n};\r\n","import environment from './environment';\r\n\r\n//Configure Bluebird Promises.\r\nPromise.config({\r\n  warnings: {\r\n    wForgottenReturn: false\r\n  }\r\n});\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","export function isEmpty(val) {\r\n  return !val || !val.trim();\r\n}\r\n","export function configure(config) {\r\n\tconfig.globalResources([\r\n\t\t// nothing here yet\r\n\t]);\r\n}\r\n","import { inject } from 'aurelia-framework';\r\nimport { DataAPI } from '../../gateways/data/data-api';\r\n\r\n@inject(DataAPI)\r\nexport class LookupResult {\r\n  constructor(api) {\r\n    this.api = api;\r\n  }\r\n\r\n  activate(params) {\r\n    this.api.getLookupData(params.lookupId).then(lookupData => {\r\n      this.lookupData = JSON.stringify(lookupData, null, ' ');\r\n    });\r\n  }\r\n}\r\n","import { inject } from 'aurelia-framework';\r\nimport { isEmpty } from '../../lib/utils';\r\nimport { Router } from 'aurelia-router';\r\n\r\nimport 'jquery';\r\nimport blockUI from 'blockUI';\r\n\r\nimport { DataAPI } from '../../gateways/data/data-api';\r\n\r\n@inject(DataAPI, Router)\r\nexport class LookupForm {\r\n  constructor(api, router) {\r\n    this.api = api;\r\n    this.router = router;\r\n    this.entityName = '';\r\n  }\r\n\r\n  get canLookup() {\r\n    return !isEmpty(this.entityName);\r\n  }\r\n\r\n  performLookup() {\r\n    blockPage();\r\n\r\n    this.api.performLookup({\r\n      entityName: this.entityName,\r\n      domainIds: []\r\n    }).then(lookupResult => {\r\n      releasePage();\r\n      this.router.navigate(`lookups/${lookupResult.id}`);\r\n    });\r\n  }\r\n}\r\n\r\nfunction blockPage() {\r\n  $.blockUI({ message: null });\r\n}\r\n\r\nfunction releasePage() {\r\n  $.unblockUI();\r\n}\r\n","import { inject } from 'aurelia-framework';\r\nimport { HttpClient, json } from 'aurelia-fetch-client';\r\nimport environment from '../../environment';\r\n\r\n@inject(HttpClient)\r\nexport class DataAPI {\r\n\r\n  constructor(httpClient) {\r\n    this.httpClient = httpClient.configure(config => config\r\n          .useStandardConfiguration()\r\n          .withBaseUrl(environment.gatewayURL)\r\n        );\r\n  }\r\n\r\n  isRequesting() {\r\n    return this.httpClient.isRequesting;\r\n  }\r\n\r\n  getLookupData(lookupId) {\r\n    return this.httpClient\r\n      .fetch('lookups/' + lookupId)\r\n      .then(response => (response.json()));\r\n  }\r\n\r\n  performLookup(lookupData) {\r\n    return this.httpClient\r\n    .fetch('lookups', {\r\n      method: 'POST',\r\n      body: JSON.stringify(lookupData),\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      }})\r\n    .then(response => (response.json()));\r\n  }\r\n}\r\n"],"sourceRoot":"../src"}